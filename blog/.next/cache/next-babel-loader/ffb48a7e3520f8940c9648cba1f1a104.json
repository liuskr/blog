{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Spin from \"antd/lib/spin\";\nimport _List from \"antd/lib/list\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nvar _jsxFileName = \"E:\\\\reactBlog\\\\blog\\\\pages\\\\list.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Header from '../components/Header';\nimport Aurhor from '../components/Author';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport servicePath from '../config/api';\nimport '../public/style/pages/list.css';\nimport { HourglassOutlined, YoutubeOutlined, FireOutlined } from '@ant-design/icons';\n\nconst myList = list => {\n  const {\n    0: ilist,\n    1: setList\n  } = useState(list.data);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const goLoading = () => {\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    setList(list.data);\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Home\")), __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(_Row, {\n    className: \"comm-main\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(_Col, {\n    className: \"comm-left\",\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"bread-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(_Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(_Breadcrumb.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 32\n    }\n  }, \"\\u9996\\u9875\")), __jsx(_Breadcrumb.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, ilist[0].typeName))), __jsx(_List, {\n    header: __jsx(\"div\", {\n      className: \"comm-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, ilist[0].typeName),\n    dataSource: ilist,\n    itemLayout: \"vertical\",\n    renderItem: item => __jsx(_Spin, {\n      spinning: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, __jsx(_List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"list-title\",\n      onClick: goLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/detailed',\n        query: {\n          id: item.id\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }\n    }, item.title))), __jsx(\"div\", {\n      className: \"list-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, __jsx(HourglassOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }\n    }), item.addTime), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, __jsx(YoutubeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }\n    }), item.typeName), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, __jsx(FireOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }\n    }), item.view_count)), __jsx(\"div\", {\n      className: \"list-context\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, item.introduce))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), __jsx(_Col, {\n    className: \"comm-right\",\n    xs: 0,\n    sm: 0,\n    md: 8,\n    lg: 6,\n    xl: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Aurhor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n};\n\nmyList.getInitialProps = async context => {\n  let id = context.query.id;\n  const promise = new Promise(resolve => {\n    axios(servicePath.getListById + id).then(res => resolve(res.data));\n  });\n  return await promise;\n};\n\nexport default myList;","map":{"version":3,"sources":["E:/reactBlog/blog/pages/list.js"],"names":["React","useState","useEffect","Head","Header","Aurhor","Link","axios","servicePath","HourglassOutlined","YoutubeOutlined","FireOutlined","myList","list","ilist","setList","data","loading","setLoading","goLoading","typeName","item","pathname","query","id","title","addTime","view_count","introduce","getInitialProps","context","promise","Promise","resolve","getListById","then","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Head from 'next/head'\r\nimport Header from '../components/Header'\r\nimport Aurhor from '../components/Author'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/api'\r\nimport '../public/style/pages/list.css'\r\nimport { Row, Col, List, Breadcrumb, Spin } from 'antd'\r\nimport { HourglassOutlined, YoutubeOutlined, FireOutlined } from '@ant-design/icons'\r\nconst myList = (list) => {\r\n  const [ilist, setList] = useState(list.data);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const goLoading = () => {\r\n\r\n    setLoading(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setList(list.data)\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Home</title>\r\n      </Head>\r\n      <Header />\r\n      <Row className='comm-main' justify=\"center\">\r\n        <Col className='comm-left' xs={24} sm={24} md={12} lg={12} xl={12}>\r\n          <div className=\"bread-div\">\r\n            <Breadcrumb>\r\n              <Breadcrumb.Item><a href=\"/\">首页</a></Breadcrumb.Item>\r\n              <Breadcrumb.Item>{ilist[0].typeName}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </div>\r\n          <List\r\n            header={<div className='comm-title'>{ilist[0].typeName}</div>}\r\n            dataSource={ilist}\r\n            itemLayout='vertical'\r\n            renderItem={item =>\r\n              <Spin spinning={loading}>\r\n                <List.Item>\r\n                  <div className='list-title' onClick={goLoading}>\r\n                    <Link href={{ pathname: '/detailed', query: { id: item.id } }}>\r\n                      <a>{item.title}</a>\r\n                    </Link>\r\n                  </div>\r\n                  <div className='list-icon'>\r\n                    <span><HourglassOutlined />{item.addTime}</span>\r\n                    <span><YoutubeOutlined />{item.typeName}</span>\r\n                    <span><FireOutlined />{item.view_count}</span>\r\n                  </div>\r\n                  <div className='list-context'>\r\n                    {item.introduce}\r\n                  </div>\r\n                </List.Item>\r\n              </Spin>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col className='comm-right' xs={0} sm={0} md={8} lg={6} xl={4}>\r\n          <Aurhor />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\nmyList.getInitialProps = async (context) => {\r\n  let id = context.query.id\r\n  const promise = new Promise((resolve) => {\r\n    axios(servicePath.getListById + id).then(res =>\r\n      resolve(res.data)\r\n    )\r\n  })\r\n  return await promise\r\n}\r\nexport default myList"]},"metadata":{},"sourceType":"module"}