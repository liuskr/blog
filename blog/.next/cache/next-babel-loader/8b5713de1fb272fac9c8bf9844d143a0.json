{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _Anchor from \"antd/lib/anchor\";\nvar _jsxFileName = \"E:\\\\myBlog\\\\blog\\\\blog\\\\components\\\\tocify.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { last } from 'lodash';\nvar Link = _Anchor.Link;\n\n// TOC目录树结构\nvar Tocify = /*#__PURE__*/function () {\n  function Tocify() {\n    var _this = this;\n\n    _classCallCheck(this, Tocify);\n\n    _defineProperty(this, \"tocItems\", []);\n\n    _defineProperty(this, \"index\", 0);\n\n    _defineProperty(this, \"reset\", function () {\n      _this.tocItems = [];\n      _this.index = 0;\n    });\n\n    this.tocItems = [];\n    this.index = 0;\n  }\n\n  _createClass(Tocify, [{\n    key: \"add\",\n    value: function add(text, level) {\n      var anchor = \"toc\".concat(level).concat(++this.index);\n      var item = {\n        anchor: anchor,\n        level: level,\n        text: text\n      };\n      var items = this.tocItems;\n\n      if (items.length === 0) {\n        // 第一个 item 直接 push\n        items.push(item);\n      } else {\n        var lastItem = last(items); // 最后一个 item\n\n        if (item.level > lastItem.level) {\n          // item 是 lastItem 的 children\n          for (var i = lastItem.level + 1; i <= 2; i++) {\n            var _lastItem = lastItem,\n                children = _lastItem.children;\n\n            if (!children) {\n              // 如果 children 不存在\n              lastItem.children = [item];\n              break;\n            }\n\n            lastItem = last(children); // 重置 lastItem 为 children 的最后一个 item\n\n            if (item.level <= lastItem.level) {\n              // item level 小于或等于 lastItem level 都视为与 children 同级\n              children.push(item);\n              break;\n            }\n          }\n        } else {\n          // 置于最顶级\n          items.push(item);\n        }\n      }\n\n      return anchor;\n    }\n  }, {\n    key: \"renderToc\",\n    value: function renderToc(items) {\n      var _this2 = this;\n\n      // 递归 render\n      return items.map(function (item) {\n        return __jsx(Link, {\n          key: item.anchor,\n          href: \"#\".concat(item.anchor),\n          title: item.text,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }\n        }, item.children && _this2.renderToc(item.children));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(_Anchor, {\n        affix: true,\n        showInkInFixed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, this.renderToc(this.tocItems));\n    }\n  }]);\n\n  return Tocify;\n}();\n\nexport { Tocify as default };","map":{"version":3,"sources":["E:/myBlog/blog/blog/components/tocify.tsx"],"names":["React","last","Link","Tocify","tocItems","index","text","level","anchor","item","items","length","push","lastItem","i","children","map","renderToc"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,QAArB;IAEQC,I,WAAAA,I;;AAS0B;IAEbC,M;AAKnB,oBAAc;AAAA;;AAAA;;AAAA,sCAJO,EAIP;;AAAA,mCAFE,CAEF;;AAAA,mCAsCN,YAAM;AACZ,MAAA,KAAI,CAACC,QAAL,GAAgB,EAAhB;AACA,MAAA,KAAI,CAACC,KAAL,GAAa,CAAb;AACD,KAzCa;;AACZ,SAAKD,QAAL,GAAgB,EAAhB;AACA,SAAKC,KAAL,GAAa,CAAb;AACD;;;;wBAEGC,I,EAAcC,K,EAAe;AAC/B,UAAMC,MAAM,gBAASD,KAAT,SAAiB,EAAE,KAAKF,KAAxB,CAAZ;AACA,UAAMI,IAAI,GAAG;AAAED,QAAAA,MAAM,EAANA,MAAF;AAAUD,QAAAA,KAAK,EAALA,KAAV;AAAiBD,QAAAA,IAAI,EAAJA;AAAjB,OAAb;AACA,UAAMI,KAAK,GAAG,KAAKN,QAAnB;;AAEA,UAAIM,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AAAE;AACxBD,QAAAA,KAAK,CAACE,IAAN,CAAWH,IAAX;AACD,OAFD,MAEO;AACL,YAAII,QAAQ,GAAGZ,IAAI,CAACS,KAAD,CAAnB,CADK,CACkC;;AAEvC,YAAID,IAAI,CAACF,KAAL,GAAaM,QAAQ,CAACN,KAA1B,EAAiC;AAAE;AACjC,eAAK,IAAIO,CAAC,GAAGD,QAAQ,CAACN,KAAT,GAAiB,CAA9B,EAAiCO,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAAA,4BACvBD,QADuB;AAAA,gBACpCE,QADoC,aACpCA,QADoC;;AAE5C,gBAAI,CAACA,QAAL,EAAe;AAAE;AACfF,cAAAA,QAAQ,CAACE,QAAT,GAAoB,CAACN,IAAD,CAApB;AACA;AACD;;AAEDI,YAAAA,QAAQ,GAAGZ,IAAI,CAACc,QAAD,CAAf,CAP4C,CAON;;AAEtC,gBAAIN,IAAI,CAACF,KAAL,IAAcM,QAAQ,CAACN,KAA3B,EAAkC;AAAE;AAClCQ,cAAAA,QAAQ,CAACH,IAAT,CAAcH,IAAd;AACA;AACD;AACF;AACF,SAfD,MAeO;AAAE;AACPC,UAAAA,KAAK,CAACE,IAAN,CAAWH,IAAX;AACD;AACF;;AAED,aAAOD,MAAP;AACD;;;8BAOSE,K,EAAkB;AAAA;;AAAE;AAC5B,aAAOA,KAAK,CAACM,GAAN,CAAU,UAAAP,IAAI;AAAA,eACnB,MAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACD,MAAhB;AAAwB,UAAA,IAAI,aAAMC,IAAI,CAACD,MAAX,CAA5B;AAAiD,UAAA,KAAK,EAAEC,IAAI,CAACH,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGG,IAAI,CAACM,QAAL,IAAiB,MAAI,CAACE,SAAL,CAAeR,IAAI,CAACM,QAApB,CADpB,CADmB;AAAA,OAAd,CAAP;AAKD;;;6BAEQ;AACP,aACE;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,cAAc,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,SAAL,CAAe,KAAKb,QAApB,CADH,CADF;AAKD;;;;;;SA9DkBD,M","sourcesContent":["import React from 'react';\r\nimport { Anchor } from 'antd';\r\nimport { last } from 'lodash';\r\n\r\nconst { Link } = Anchor;\r\n\r\nexport interface TocItem {\r\n  anchor: string;\r\n  level: number;\r\n  text: string;\r\n  children?: TocItem[];\r\n}\r\n\r\nexport type TocItems = TocItem[]; // TOC目录树结构\r\n\r\nexport default class Tocify {\r\n  tocItems: TocItems = [];\r\n\r\n  index: number = 0;\r\n\r\n  constructor() {\r\n    this.tocItems = [];\r\n    this.index = 0;\r\n  }\r\n\r\n  add(text: string, level: number) {\r\n    const anchor = `toc${level}${++this.index}`;\r\n    const item = { anchor, level, text };\r\n    const items = this.tocItems;\r\n\r\n    if (items.length === 0) { // 第一个 item 直接 push\r\n      items.push(item);\r\n    } else {\r\n      let lastItem = last(items) as TocItem; // 最后一个 item\r\n\r\n      if (item.level > lastItem.level) { // item 是 lastItem 的 children\r\n        for (let i = lastItem.level + 1; i <= 2; i++) {\r\n          const { children } = lastItem;\r\n          if (!children) { // 如果 children 不存在\r\n            lastItem.children = [item];\r\n            break;\r\n          }\r\n\r\n          lastItem = last(children) as TocItem; // 重置 lastItem 为 children 的最后一个 item\r\n\r\n          if (item.level <= lastItem.level) { // item level 小于或等于 lastItem level 都视为与 children 同级\r\n            children.push(item);\r\n            break;\r\n          }\r\n        }\r\n      } else { // 置于最顶级\r\n        items.push(item);\r\n      }\r\n    }\r\n\r\n    return anchor;\r\n  }\r\n\r\n  reset = () => {\r\n    this.tocItems = [];\r\n    this.index = 0;\r\n  };\r\n\r\n  renderToc(items: TocItem[]) { // 递归 render\r\n    return items.map(item => (\r\n      <Link key={item.anchor} href={`#${item.anchor}`} title={item.text}>\r\n        {item.children && this.renderToc(item.children)}\r\n      </Link>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Anchor affix showInkInFixed>\r\n        {this.renderToc(this.tocItems)}\r\n      </Anchor>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}