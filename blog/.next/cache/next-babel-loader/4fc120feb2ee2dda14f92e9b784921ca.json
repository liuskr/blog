{"ast":null,"code":"import _Anchor from \"antd/lib/anchor\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { last } from 'lodash';\nconst {\n  Link\n} = _Anchor;\n// TOC目录树结构\nexport default class Tocify {\n  constructor() {\n    _defineProperty(this, \"tocItems\", []);\n\n    _defineProperty(this, \"index\", 0);\n\n    _defineProperty(this, \"reset\", () => {\n      this.tocItems = [];\n      this.index = 0;\n    });\n\n    this.tocItems = [];\n    this.index = 0;\n  }\n\n  add(text, level) {\n    const anchor = `toc${level}${++this.index}`;\n    const item = {\n      anchor,\n      level,\n      text\n    };\n    const items = this.tocItems;\n\n    if (items.length === 0) {\n      // 第一个 item 直接 push\n      items.push(item);\n    } else {\n      let lastItem = last(items); // 最后一个 item\n\n      if (item.level > lastItem.level) {\n        // item 是 lastItem 的 children\n        for (let i = lastItem.level + 1; i <= 2; i++) {\n          const {\n            children\n          } = lastItem;\n\n          if (!children) {\n            // 如果 children 不存在\n            lastItem.children = [item];\n            break;\n          }\n\n          lastItem = last(children); // 重置 lastItem 为 children 的最后一个 item\n\n          if (item.level <= lastItem.level) {\n            // item level 小于或等于 lastItem level 都视为与 children 同级\n            children.push(item);\n            break;\n          }\n        }\n      } else {\n        // 置于最顶级\n        items.push(item);\n      }\n    }\n\n    return anchor;\n  }\n\n  renderToc(items) {\n    // 递归 render\n    return items.map(item => __jsx(Link, {\n      key: item.anchor,\n      href: `#${item.anchor}`,\n      title: item.text\n    }, item.children && this.renderToc(item.children)));\n  }\n\n  render() {\n    return __jsx(_Anchor, {\n      affix: true,\n      showInkInFixed: true\n    }, this.renderToc(this.tocItems));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}