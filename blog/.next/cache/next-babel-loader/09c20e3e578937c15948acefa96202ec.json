{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _Anchor from \"antd/lib/anchor\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { last } from 'lodash';\nvar Link = _Anchor.Link;\n\n// TOC目录树结构\nvar Tocify = /*#__PURE__*/function () {\n  function Tocify() {\n    var _this = this;\n\n    _classCallCheck(this, Tocify);\n\n    _defineProperty(this, \"tocItems\", []);\n\n    _defineProperty(this, \"index\", 0);\n\n    _defineProperty(this, \"reset\", function () {\n      _this.tocItems = [];\n      _this.index = 0;\n    });\n\n    this.tocItems = [];\n    this.index = 0;\n  }\n\n  _createClass(Tocify, [{\n    key: \"add\",\n    value: function add(text, level) {\n      var anchor = \"toc\".concat(level).concat(++this.index);\n      var item = {\n        anchor: anchor,\n        level: level,\n        text: text\n      };\n      var items = this.tocItems;\n\n      if (items.length === 0) {\n        // 第一个 item 直接 push\n        items.push(item);\n      } else {\n        var lastItem = last(items); // 最后一个 item\n\n        if (item.level > lastItem.level) {\n          // item 是 lastItem 的 children\n          for (var i = lastItem.level + 1; i <= 2; i++) {\n            var _lastItem = lastItem,\n                children = _lastItem.children;\n\n            if (!children) {\n              // 如果 children 不存在\n              lastItem.children = [item];\n              break;\n            }\n\n            lastItem = last(children); // 重置 lastItem 为 children 的最后一个 item\n\n            if (item.level <= lastItem.level) {\n              // item level 小于或等于 lastItem level 都视为与 children 同级\n              children.push(item);\n              break;\n            }\n          }\n        } else {\n          // 置于最顶级\n          items.push(item);\n        }\n      }\n\n      return anchor;\n    }\n  }, {\n    key: \"renderToc\",\n    value: function renderToc(items) {\n      var _this2 = this;\n\n      // 递归 render\n      return items.map(function (item) {\n        return __jsx(Link, {\n          key: item.anchor,\n          href: \"#\".concat(item.anchor),\n          title: item.text\n        }, item.children && _this2.renderToc(item.children));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(_Anchor, {\n        affix: true,\n        showInkInFixed: true\n      }, this.renderToc(this.tocItems));\n    }\n  }]);\n\n  return Tocify;\n}();\n\nexport { Tocify as default };","map":null,"metadata":{},"sourceType":"module"}