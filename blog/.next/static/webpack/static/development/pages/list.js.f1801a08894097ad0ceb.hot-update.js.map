{"version":3,"file":"static/webpack/static\\development\\pages\\list.js.f1801a08894097ad0ceb.hot-update.js","sources":["webpack:///./pages/list.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport Head from 'next/head'\r\nimport Header from '../components/Header'\r\nimport Aurhor from '../components/Author'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\nimport marked from 'marked'\r\nimport servicePath from '../config/api'\r\nimport '../public/style/pages/list.css'\r\nimport { Row, Col, List, Breadcrumb, Spin, Skeleton } from 'antd'\r\nimport { CarryOutOutlined, YoutubeOutlined, FireOutlined, } from '@ant-design/icons'\r\nimport CountUp from 'react-countup';\r\nlet load = true;\r\nconst myList = (props) => {\r\n\r\n  const [ilist, setList] = useState(props.data);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skeleton, setSkeleton] = useState(true);\r\n  const [typeName, setTypeName] = useState()\r\n  const renderer = new marked.Renderer();\r\n  const router = useRouter();\r\n  marked.setOptions({\r\n    renderer: renderer,\r\n    gfm: true,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    tables: true,\r\n    breaks: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n    sanitize: false,\r\n    xhtml: false,\r\n  });\r\n\r\n  const goLoading = () => {\r\n    setLoading(true)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setList(props.data);\r\n    setSkeleton(load);\r\n    switch (router.query.id) {\r\n      case 1:\r\n        setTypeName('javascript');\r\n        break;\r\n      case 2:\r\n        setTypeName('Python');\r\n        break;\r\n      case 3:\r\n        setTypeName('Node');\r\n        break;\r\n    }\r\n    console.log(typeName)\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Home</title>\r\n      </Head>\r\n      <Header />\r\n      <Row className='comm-main' justify=\"center\">\r\n        <Col className='comm-left' xs={24} sm={24} md={16} lg={14} xl={12}>\r\n          <Skeleton active loading={skeleton}>\r\n            <div className=\"bread-div\">\r\n              <Breadcrumb>\r\n                <Breadcrumb.Item><a href=\"/\">首页</a></Breadcrumb.Item>\r\n                <Breadcrumb.Item>{typeName}</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n            </div>\r\n            <List\r\n              header={<div className='comm-title'>{typeName}</div>}\r\n              dataSource={ilist}\r\n              itemLayout='vertical'\r\n              split\r\n              renderItem={item =>\r\n                <Spin spinning={loading}>\r\n                  <List.Item>\r\n                    <div className='list-title' onClick={goLoading}>\r\n                      <Link href={{ pathname: '/detailed', query: { id: item.id } }}>\r\n                        <a>{item.title}</a>\r\n                      </Link>\r\n                    </div>\r\n                    <div className='list-icon'>\r\n                      <span className='icon-time'><CarryOutOutlined />{item.addTime}</span>\r\n                      <span className='icon-category'><YoutubeOutlined />{item.typeName}</span>\r\n                      <span className='icon-numberpeople'><FireOutlined /><CountUp end={item.view_count} />人 </span>\r\n                    </div>\r\n                    <div className='list-context' dangerouslySetInnerHTML={{ __html: marked(item.introduce) }}>\r\n                    </div>\r\n                  </List.Item>\r\n                </Spin>\r\n              }\r\n            />\r\n          </Skeleton>\r\n\r\n        </Col>\r\n        <Col className='comm-right' xs={0} sm={0} md={6} lg={6} xl={3}>\r\n          <Aurhor />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\nmyList.getInitialProps = async (context) => {\r\n  let id = context.query.id\r\n  const promise = new Promise((resolve) => {\r\n    axios(servicePath.getListById + id).then(res =>\r\n      resolve(res.data, load = false)\r\n    )\r\n  })\r\n  return await promise\r\n}\r\nexport default myList"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AACA;AAUA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AANA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;;;;A","sourceRoot":""}